repository=$(echo ${image} | cut -d'/' -f2- | cut -d':' -f 1)
aws ecr create-repository --repository-name ${repository} > /dev/null || true
echo ecr/${registry}/${repository} created

tmpfile=$(mktemp)
cat <<EOF > $tmpfile
{
  "rules": [
    {
      "rulePriority": 1,
      "description": "Keep images with rc prefix in tag",
      "selection": {
          "tagStatus": "tagged",
          "tagPrefixList":["rc"],
          "countType": "imageCountMoreThan",
          "countNumber": 5
      },
      "action": {
          "type": "expire"
      }
    },
    {
      "rulePriority": 2,
      "description": "Delete all untagged images",
      "selection": {
          "tagStatus": "untagged",
          "countType": "sinceImagePushed",
          "countUnit": "days",
          "countNumber": 1
      },
      "action": {
          "type": "expire"
      }
    },
    {
      "rulePriority": 3,
      "description": "Delete all images that are tagged by git hash and pushed 30 days ago",
      "selection": {
          "tagStatus": "tagged",
          "tagPrefixList":["git"],
          "countType": "sinceImagePushed",
          "countUnit": "days",
          "countNumber": 5
      },
      "action": {
          "type": "expire"
      }
    }
  ]
}
EOF

account=$(aws sts get-caller-identity --output text --query 'Account')
aws ecr put-lifecycle-policy \
    --registry-id ${account} \
    --repository-name ${repository} \
    --lifecycle-policy-text file://${tmpfile} \
    >/dev/null
rm ${tmpfile}